pipeline {
    agent any

    stages {
        // stage('Hello') {
        //     steps {
        //         sh 'chmod +x test.sh '
        //         sh './test.sh'
        //     }
        // }

        //////
        stage('build') {
            steps {
                sh '''
                   docker build -t docker.io/moatazxz/myapp:latest  .
                '''
            }
        }
     ////////

       stage('push') {
            steps {
            withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh """
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin docker.io
            docker push docker.io/moatazxz/myapp:latest
          """
            }
        }   
    }

    ////

     stage('Deploy over SSH') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sshagent(credentials: ['deploy-ssh-key']) {
            sh """
              ssh -o StrictHostKeyChecking=no ubuntu@3.74.166.220 '
                set -euo pipefail
                echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                docker pull docker.io/moatazxz/myapp:latest
                docker run -d --name demo-app -p 80:80 docker.io/moatazxz/myapp:latest
                docker ps 
              '
            """
          }
        }
      }
    }


    stage('Terraform') {
      steps {
        withCredentials([
          string(credentialsId: 'aws_access_key_id', variable: 'AWS_ACCESS_KEY_ID'),
          string(credentialsId: 'aws_secret_access_key', variable: 'AWS_SECRET_ACCESS_KEY')
        ]) {
         docker.image('hashicorp/terraform:1.9.5').inside("-e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY") {
          dir('infra') {
                    sh '''
                        terraform init -input=false
                        terraform plan -out=tfplan -input=false 
                    '''
          }
        }
      }
    }



}


}
